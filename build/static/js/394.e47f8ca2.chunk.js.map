{"version":3,"file":"static/js/394.e47f8ca2.chunk.js","mappings":"4MAkBA,MAAMA,EAAc,CAChBC,SAAU,SACVC,MAAO,sBACPC,SAAU,aACVC,KAAM,SACNC,OAAQ,GACRC,WAAW,GAkSf,EA/RwBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAE1B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAShB,IAEtCiB,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAK7CG,EAAY,UACZC,EAAgB,eAEfC,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IACxCO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAS,GAoI7C,OACIS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UAElDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6EAA4EC,SAAA,EAEvFF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,WAASF,UAAU,4CAA2CC,SAAA,EAC1DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mIAAkIC,SACpG,QADoGnB,EAClI,OAAVM,QAAU,IAAVA,GAAoB,QAAVL,EAAVK,EAAYb,gBAAQ,IAAAQ,GAAK,QAALC,EAApBD,EAAuB,UAAE,IAAAC,OAAf,EAAVA,EAA2BmB,qBAAa,IAAArB,EAAAA,EAAI,OAEjDoB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAA0B,YAAU,SAAQC,SAAEb,EAAWb,YACxEwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAEb,EAAWZ,eAI3DuB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAGdE,EAAAA,EAAAA,MAAA,MAAIF,UAAU,oBAAmBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,oCAAmCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,wBAChCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAc,YAAU,SAAQC,SAAEb,EAAWb,eAEjE2B,EAAAA,EAAAA,MAAA,MAAIF,UAAU,oCAAmCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,wBAChCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAqB,QAArBhB,EAAEG,EAAWX,gBAAQ,IAAAQ,EAAAA,EAAI,UAE1DiB,EAAAA,EAAAA,MAAA,MAAIF,UAAU,oCAAmCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,kBAChCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAc,YAAU,SAAQC,SAC3CG,MAAMC,QAAQjB,EAAWkB,WACpBlB,EAAWkB,UAAUC,KAAK,MAC1BH,MAAMC,QAAQjB,EAAWV,MACrBU,EAAWV,KAAK6B,KAAK,MACmB,QADdrB,EACV,QADUC,EACzBC,EAAWV,YAAI,IAAAS,EAAAA,EAAIC,EAAWkB,iBAAS,IAAApB,EAAAA,EAAI,uBAO1EgB,EAAAA,EAAAA,MAAA,WAASF,UAAU,0BAAyBC,SAAA,EAExCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4CAA4CQ,aAAa,MAAMC,SAnElEC,UAAc,IAADC,EACtCC,EAAEC,iBACF,MAAMC,EAAcF,EAAEG,OAAOD,YAAYE,MACzC,IAAKF,EAAYG,OAAQ,aAEnBC,EAAAA,EAAAA,IAAeJ,GAErB,MAAMK,EAA6B,QAAtBR,GAAGS,EAAAA,EAAAA,IAAU,iBAAS,IAAAT,EAAAA,EAAI,CAAC,EAClCU,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQH,GAAO,IAAE5C,SAAUuC,KACxCS,EAAAA,EAAAA,IAAU,SAAUC,KAAKC,UAAUJ,GAAU,GAC7ChC,EAAcgC,GACdT,EAAEG,OAAOW,QAETC,MAAM,wEACNC,QAAQC,IAAIf,IAqD8Gb,SAAA,EAC1GC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAC,qCACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,0DAG5CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,kBAAkB9B,UAAU,0CAAyCC,SAAC,qCACrFF,EAAAA,EAAAA,KAAA,SAAOgC,GAAG,kBAAkBC,KAAK,kBAAkBC,KAAK,OAAOC,MAAO9C,EAAWb,SAAU4D,UAAQ,EAC/FnC,UAAU,4HAElBE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,cAAc9B,UAAU,0CAAyCC,SAAC,+BACjFF,EAAAA,EAAAA,KAAA,SAAOgC,GAAG,cAAcC,KAAK,cAAcC,KAAK,OAAOG,UAAW,EAAGC,UAAW,GAAIC,YAAY,iEAC5FtC,UAAU,sHACV,mBAAiB,eAAeuC,UAAQ,KAC5CxC,EAAAA,EAAAA,KAAA,KAAGgC,GAAG,eAAe/B,UAAU,6BAA4BC,SAAC,+EAIpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UACzCF,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASjC,UAAU,wIAAuIC,SAAC,0CAOhLC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4CAA4CQ,aAAa,MAAMC,SA1IlEC,UACzBE,EAAEC,iBACF,MAAME,EAASH,EAAEG,OACXyB,EAAkBzB,EAAOyB,gBAAgBxB,MAAMC,OAC/CwB,EAAc1B,EAAO0B,YAAYzB,MAAMC,OACvCyB,EAAkB3B,EAAO2B,gBAAgB1B,MAAMC,OAEjDpB,IAGA2C,GACGC,GACAC,EAKJD,IAAgBC,EAKhBD,EAAYE,OAAS,EACpBhB,MAAM,6FAWNA,MAAM,iFAhBNA,MAAM,yGALFA,MAAM,8DA6H4G1B,SAAA,EAC1GC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAC,2CACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,6GAG5CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,CAEpCN,GAaEO,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0CAAyCC,SAAC,8BAC3DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,SAASF,GAAG,WAAWC,KAAK,WAAWhB,MAAOzB,EAAeqD,SAAWhC,GAAMpB,EAAiBoB,EAAEG,OAAOC,OAAQ6B,SAAUhD,EAClIG,UAAU,2HACdD,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASa,QAhMhCC,KAIjBxD,EAAc0B,OAMf1B,GAAiBH,EAAW4D,QAahClD,GAAc,GACd6B,MAAM,+EAbFA,MAAM,4DANNA,MAAM,yEA2LwEkB,SAAUhD,EACxDG,UAAU,8FAA6FC,SAAC,wBAlBpHC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0CAAyCC,SAAC,8BAC3DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOF,GAAG,SAASC,KAAK,SAAShB,MAAO5B,EAAWT,OAAQiE,SAvNjFhC,IACtB,MAAM,KAAEoB,EAAI,MAAEhB,GAAUJ,EAAEG,OAC1B1B,EAAe4D,IAAI3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW2B,GAAI,IAAE,CAACjB,GAAOhB,MAsNRhB,UAAU,2HACdD,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASa,QAnNlCI,KACpB,IAAK9D,EAAWT,OAAOsC,OAEnB,YADAU,MAAM,wEAIV,MAAMhD,EAASS,EAAWT,OAAOwE,QAAQ1D,EAAW,IACpD,IAAKC,EAAc0D,KAAKzE,GAEpB,YADAgD,MAAM,4FAIV,MAAMqB,GAhCWK,EAgCU,IAhCLC,EAgCa,OAhCLC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAAvDK,IAACL,EAAKC,EAiCtB3B,MAAM,8BAAYqB,GAClBpB,QAAQC,IAAImB,GAEZpD,GAAe,GACfP,EAAc4D,IAAI3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU2B,GAAI,IAAED,aAmMEhD,UAAU,4FAA2FC,SAAC,wBAmBtHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,kBAAkB9B,UAAU,0CAAyCC,SAAC,2CACrFF,EAAAA,EAAAA,KAAA,SAAOgC,GAAG,kBAAkBC,KAAK,kBAAkBC,KAAK,WAAWK,YAAY,wCAAUC,UAAQ,EAACM,UAAWhD,EACzGG,UAAU,8HAGlBE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,cAAc9B,UAAU,0CAAyCC,SAAC,qCACjFF,EAAAA,EAAAA,KAAA,SAAOgC,GAAG,cAAcC,KAAK,cAAcC,KAAK,WAAWK,YAAY,kCAASO,UAAWhD,EACvFG,UAAU,wHACVoC,UAAW,EAAGC,UAAW,GAAIE,UAAQ,EAAC,mBAAiB,eAC3DxC,EAAAA,EAAAA,KAAA,KAAGgC,GAAG,YAAY/B,UAAU,6BAA4BC,SAAC,iHAG7DC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,kBAAkB9B,UAAU,0CAAyCC,SAAC,kDACrFF,EAAAA,EAAAA,KAAA,SAAOgC,GAAG,kBAAkBC,KAAK,kBAAkBC,KAAK,WAAWK,YAAY,+CAAYC,UAAQ,EAACM,UAAWhD,EAC3GG,UAAU,iIAItBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UACzCF,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASjC,UAAU,8IAA6IC,SAAC,wDC3S3L,SAAS0D,IACpB,OACIzD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAEIF,EAAAA,EAAAA,KAAC6D,EAAAA,EAAO,KACR7D,EAAAA,EAAAA,KAAClB,EAAe,MAG5B,C","sources":["component/member/MyPageComponent.js","pages/member/MyPage.js"],"sourcesContent":["/**\r\n * MyPage · Profile Settings\r\n *\r\n * Props (optional):\r\n *   displayName?: string            // 상단/프로필 카드 표시용 닉네임\r\n *   email?: string                  // 프로필 카드 표시용 이메일\r\n *   joinedAt?: string               // 가입일 표시\r\n *   role?: string                   // 권한 표시\r\n */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Certification, modifyNickname, modifyPassword } from \"../../api/memberApi\";\r\n// import useAuthGuard from \"../../component/hooks/useAuthGuard\"\r\nimport { getCookie, removeCookie, setCookie } from \"../../util/CookieUtil\";\r\n// import { logout } from \"../../slice/LoginSlice\";\r\n// import useCustomMove from \"../hooks/useCustomMove\";\r\n// import { useDispatch } from \"react-redux\";\r\n\r\nconst memberState = {\r\n    nickname: 'member',\r\n    email: 'member@mallpang.com',\r\n    joinedAt: '2025-01-01',\r\n    role: 'MEMBER',\r\n    telNum: '',\r\n    isCertify: false,\r\n}\r\n\r\nconst MyPageComponent = () => {\r\n    // const { member } = useAuthGuard()\r\n    const [memberData, setMemberData] = useState(memberState)\r\n    const rangeRandom = (min, max) => Math.floor(Math.random() * (max - min) + min)\r\n    const [authCodeInput, setAuthCodeInput] = useState(\"\");\r\n    // const { moveToPath } = useCustomMove()\r\n    // const dispatch = useDispatch()\r\n\r\n    // 정규식\r\n    const notNumber = /[^0-9]/g\r\n    const telNumPattern = /^0\\d{8,10}$/\r\n\r\n    const [isVerifying, setIsVerifying] = useState(false);\r\n    const [isVerified, setIsVerified] = useState(false);\r\n    //\r\n\r\n    // 실시간 데이터 갱신\r\n    const handleChangeData = (e) => {\r\n        const { name, value } = e.target;\r\n        setMemberData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // 인증번호\r\n    const handleClickAuth = () => {\r\n        if (!memberData.telNum.trim()) {\r\n            alert(\"전화번호를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        const telNum = memberData.telNum.replace(notNumber, \"\")\r\n        if (!telNumPattern.test(telNum)) {\r\n            alert(\"전화번호의 길이가 맞지 않습니다.\")\r\n            return;\r\n        }\r\n\r\n        const number = rangeRandom(100000, 999999)\r\n        alert(\"인증번호 : \" + number)\r\n        console.log(number)\r\n\r\n        setIsVerifying(true);\r\n        setMemberData(prev => ({ ...prev, number }))\r\n\r\n        // const formdata = new FormData()\r\n        // formdata.append(\"telNum\", telNum)\r\n        // formdata.append(\"number\", number)\r\n\r\n        // 여기서 인증번호를 백으로 전송하고 전화번호를 받아둠.\r\n        // Certification(formdata)\r\n\r\n        // 마무리는 무조건 인증번호가 발송되었다는 알림으로 마무리됨\r\n        // alert(\"인증번호가 전송되었습니다.\")\r\n    };\r\n\r\n    // 인증번호 받은 후\r\n    const handleClickVerify = () => {\r\n        // console.log(member.telNum)\r\n\r\n        // 값이 제대로 적힌 것이 맞는지 확인\r\n        if (!authCodeInput.trim()) {\r\n            alert(\"인증번호를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        // 인증번호가 서로 같은지 확인\r\n        if (authCodeInput != memberData.number) {\r\n            alert(\"인증번호가 다릅니다.\")\r\n            return;\r\n        }\r\n\r\n        // 회원가입 때, 등록된 번호와 같은지 확인\r\n        // if(memberData.telNum !== member.telNum){\r\n        //     alert(\"등록된 전화번호가 아닙니다.\")\r\n        //     setIsVerifying(false);\r\n        //     return;\r\n        // }\r\n\r\n        // 여기서 인증번호가 같은지 확인 후 백으로 전화번호 전송\r\n        setIsVerified(true);  // 해당 값이 true가 되면 버튼이 잠기게 설정해두었음\r\n        alert(\"본인인증이 완료되었습니다.\");\r\n    };\r\n\r\n    // 패스워드\r\n    const handlePasswordSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const currentPassword = target.currentPassword.value.trim();\r\n        const newPassword = target.newPassword.value.trim();\r\n        const confirmPassword = target.confirmPassword.value.trim();\r\n\r\n        if(!isVerified)\r\n            return;\r\n\r\n        if(!currentPassword\r\n            ||!newPassword\r\n            ||!confirmPassword){\r\n                alert('빈칸을 다 채워주세요')\r\n                return;\r\n        }\r\n\r\n        if(newPassword !== confirmPassword){\r\n            alert(\"새 비밀번호가 서로 일치하지 않습니다.\")\r\n            return;\r\n        }\r\n\r\n        if(newPassword.length < 8){\r\n            alert(\"비밀번호는 8자 이상이어야 합니다.\")\r\n            return\r\n        }\r\n\r\n        // try{\r\n            // await modifyPassword({currentPassword, newPassword});\r\n            // alert(\"비밀번호가 변경되었습니다. 다시 로그인 해주세요.\")\r\n\r\n            // 여기서 로그인 창으로 보내고 로그아웃 메서드 발동하고 쿠키 삭제\r\n            // removeCookie(\"member\", '/')\r\n            // window.location.replace(\"/member/login\");\r\n            alert(\"비밀번호가 변경 박스 / MyPageComponent.js\")\r\n        // }catch(err){\r\n        //     const msg = err?.response?.data?.message || \"변경 실패. 현재 비밀번호를 확인해주세요.\"\r\n        //     alert(msg)\r\n        // }\r\n    };\r\n\r\n    // 닉네임\r\n    const handleNicknameSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const newNickname = e.target.newNickname.value;\r\n        if (!newNickname.trim()) return;\r\n\r\n        await modifyNickname(newNickname)\r\n\r\n        const current = getCookie(\"member\") ?? {};\r\n        const updated = { ...current, nickname: newNickname };\r\n        setCookie(\"member\", JSON.stringify(updated), 1)\r\n        setMemberData(updated);\r\n        e.target.reset();\r\n\r\n        alert('닉네임이 변경되었습니다.')\r\n        console.log(newNickname)\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setMemberData(getCookie(\"member\"))\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"bg-gray-50 text-gray-900 min-h-screen\">\r\n            {/* 전체 폼 */}\r\n            <div className=\"max-w-6xl mx-auto px-4 md:px-6 py-8 grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n                {/* 프로필 정보 */}\r\n                <aside className=\"lg:col-span-4\">\r\n                    <section className=\"bg-white rounded-2xl border shadow-sm p-6\">\r\n                        <div className=\"flex items-center gap-4\">\r\n                            {/* 윗칸 */}\r\n                            <div className=\"w-16 h-16 rounded-xl bg-gradient-to-br from-indigo-500 to-blue-500 text-white flex items-center justify-center font-bold text-xl\">\r\n                                {memberData?.nickname?.[0]?.toUpperCase() ?? \"U\"}\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"text-base font-semibold\" aria-live=\"polite\">{memberData.nickname}</div>\r\n                                <div className=\"text-sm text-gray-500\">{memberData.email}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className=\"my-6\" />\r\n\r\n                        {/* 아랫칸 */}\r\n                        <ul className=\"space-y-2 text-sm\">\r\n                            <li className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-600\">닉네임</span>\r\n                                <span className=\"font-medium\" aria-live=\"polite\">{memberData.nickname}</span>\r\n                            </li>\r\n                            <li className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-600\">가입일</span>\r\n                                <span className=\"font-medium\">{memberData.joinedAt ?? \"-\"}</span>\r\n                            </li>\r\n                            <li className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-600\">권한</span>\r\n                                <span className=\"font-medium\" aria-live=\"polite\">\r\n                                    {Array.isArray(memberData.roleNames)\r\n                                        ? memberData.roleNames.join(\", \")\r\n                                        : Array.isArray(memberData.role)\r\n                                            ? memberData.role.join(\", \")\r\n                                            : (memberData.role ?? memberData.roleNames ?? \"MEMBER\")}\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n                    </section>\r\n                </aside>\r\n\r\n                <section className=\"lg:col-span-8 space-y-6\">\r\n                    {/* 닉네임 변경 */}\r\n                    <form className=\"bg-white rounded-2xl border shadow-sm p-6\" autoComplete=\"off\" onSubmit={handleNicknameSubmit}>\r\n                        <div className=\"flex items-center justify-between mb-4\">\r\n                            <h2 className=\"text-base font-semibold\">닉네임 변경</h2>\r\n                            <span className=\"text-xs text-gray-500\">영문/숫자/한글 2~20자</span>\r\n                        </div>\r\n\r\n                        <div className=\"grid sm:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <label htmlFor=\"currentNickname\" className=\"block text-sm font-medium text-gray-700\">현재 닉네임</label>\r\n                                <input id=\"currentNickname\" name=\"currentNickname\" type=\"text\" Value={memberData.nickname} readOnly\r\n                                    className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-blue-200\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"newNickname\" className=\"block text-sm font-medium text-gray-700\">새 닉네임</label>\r\n                                <input id=\"newNickname\" name=\"newNickname\" type=\"text\" minLength={2} maxLength={20} placeholder=\"새 닉네임을 입력하세요\"\r\n                                    className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-blue-200\"\r\n                                    aria-describedby=\"nicknameHelp\" required />\r\n                                <p id=\"nicknameHelp\" className=\"mt-1 text-xs text-gray-500\">특수문자 제외(._- 허용), 2~20자</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-5 flex items-center gap-3\">\r\n                            <button type=\"submit\" className=\"px-4 py-2 rounded-xl bg-blue-600 text-white text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-200\">\r\n                                닉네임 변경\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    {/* 비밀번호 변경 */}\r\n                    <form className=\"bg-white rounded-2xl border shadow-sm p-6\" autoComplete=\"off\" onSubmit={handlePasswordSubmit}>\r\n                        <div className=\"flex items-center justify-between mb-4\">\r\n                            <h2 className=\"text-base font-semibold\">비밀번호 변경</h2>\r\n                            <span className=\"text-xs text-gray-500\">8~32자, 영문 대소문자/숫자/특수문자 조합</span>\r\n                        </div>\r\n\r\n                        <div className=\"grid sm:grid-cols-2 gap-4\">\r\n                            {/* 휴대폰 인증 */}\r\n                            {!isVerifying ? (\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">전화번호</label>\r\n                                    <div className=\"flex items-center gap-6\">\r\n                                        <input type=\"text\" id=\"telNum\" name=\"telNum\" value={memberData.telNum} onChange={handleChangeData}\r\n                                            className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-indigo-200\" />\r\n                                        <button type=\"button\" onClick={handleClickAuth}\r\n                                            className=\"w-[20%] rounded-lg bg-blue-500 px-2.5 py-2 text-white transition-colors hover:bg-blue-600\">\r\n                                            인증\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">인증번호</label>\r\n                                    <div className=\"flex items-center gap-6\">\r\n                                        <input type=\"number\" id=\"authCode\" name=\"authCode\" value={authCodeInput} onChange={(e) => setAuthCodeInput(e.target.value)} disabled={isVerified}\r\n                                            className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-indigo-200\" />\r\n                                        <button type=\"button\" onClick={handleClickVerify} disabled={isVerified}\r\n                                            className=\"w-[20%] rounded-lg bg-green-500 px-2.5 py-2 text-white transition-colors hover:bg-green-600\">\r\n                                            확인\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"sm:col-span-2\">\r\n                                <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700\">현재 비밀번호</label>\r\n                                <input id=\"currentPassword\" name=\"currentPassword\" type=\"password\" placeholder=\"현재 비밀번호\" required disabled={!isVerified}\r\n                                    className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-indigo-200\" />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">새 비밀번호</label>\r\n                                <input id=\"newPassword\" name=\"newPassword\" type=\"password\" placeholder=\"새 비밀번호\" disabled={!isVerified}\r\n                                    className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-indigo-200\"\r\n                                    minLength={8} maxLength={32} required aria-describedby=\"newPwHelp\" />\r\n                                <p id=\"newPwHelp\" className=\"mt-1 text-xs text-gray-500\">영문 대/소문자, 숫자, 특수문자 포함 권장</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">새 비밀번호 확인</label>\r\n                                <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" placeholder=\"새 비밀번호 확인\" required disabled={!isVerified}\r\n                                    className=\"mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-indigo-200\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-5 flex items-center gap-3\">\r\n                            <button type=\"submit\" className=\"px-4 py-2 rounded-xl bg-indigo-600 text-white text-sm font-medium hover:bg-indigo-700 focus:outline-none focus:ring-4 focus:ring-indigo-200\">\r\n                                비밀번호 변경\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPageComponent","import React from \"react\";\r\nimport MainNav from \"../../common/MainNav\";\r\nimport MyPageComponent from \"../../component/member/MyPageComponent\";\r\n\r\nexport default function MyPage() {\r\n    return (\r\n        <div>\r\n            {/* 네비바 */}\r\n            <MainNav />\r\n            <MyPageComponent />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["memberState","nickname","email","joinedAt","role","telNum","isCertify","MyPageComponent","_memberData$nickname$","_memberData$nickname","_memberData$nickname$2","_memberData$joinedAt","_ref","_memberData$role","memberData","setMemberData","useState","authCodeInput","setAuthCodeInput","notNumber","telNumPattern","isVerifying","setIsVerifying","isVerified","setIsVerified","_jsx","className","children","_jsxs","toUpperCase","Array","isArray","roleNames","join","autoComplete","onSubmit","async","_getCookie","e","preventDefault","newNickname","target","value","trim","modifyNickname","current","getCookie","updated","_objectSpread","setCookie","JSON","stringify","reset","alert","console","log","htmlFor","id","name","type","Value","readOnly","minLength","maxLength","placeholder","required","currentPassword","newPassword","confirmPassword","length","onChange","disabled","onClick","handleClickVerify","number","prev","handleClickAuth","replace","test","min","max","Math","floor","random","rangeRandom","MyPage","MainNav"],"sourceRoot":""}