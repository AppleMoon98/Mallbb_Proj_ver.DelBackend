{"version":3,"file":"static/js/132.b09ba98f.chunk.js","mappings":"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","sources":["api/reviewApi.js","component/review/AddComponent.js","pages/review/AddPage.js","api/bakeryApi.js"],"sourcesContent":["import jwtAxios from \"../util/JWTUtil\"\r\nimport { API_SERVER_HOST, moveAxios } from \"./config\"\r\n\r\nconst prefix = `${API_SERVER_HOST}/r`\r\n\r\nexport const getList = async(pageParam) => {\r\n    const {page, size} = pageParam\r\n    const res = await moveAxios.get(`${prefix}/l`, {params:{page:page, size:size}})\r\n    return res.data\r\n}\r\n\r\nexport const getOne = async (id) => {\r\n    const res = await moveAxios.get(`${prefix}/${id}`)\r\n    return res.data\r\n}\r\n\r\nexport const register = async (formdata) => {\r\n    const res = await jwtAxios.post(`${prefix}/`, formdata,\r\n    {headers:{\"Content-Type\":\"multipart/form-data\"}})\r\n    return res.data\r\n}\r\n\r\nexport const modify = async (id, formdata) => {\r\n    const res = await jwtAxios.put(`${prefix}/${id}`, formdata,{headers:{\"Content-Type\":\"multipart/form-data\"}})\r\n    return res.data\r\n}\r\n\r\nexport const remove = async (id) => {\r\n    const res = await jwtAxios.delete(`${prefix}/${id}`)\r\n    return res.data\r\n}\r\n\r\nexport const getFileUrl = (filename) =>{\r\n   return `${prefix}/view/${encodeURIComponent(filename)}`;\r\n}\r\n\r\nexport const putOne = async (formData, id) => {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    const res = await jwtAxios.put(`${prefix}/${id}`, formData, header)\r\n    return res.data\r\n}","import { useState, useRef, useEffect } from \"react\";\r\nimport { register } from \"../../api/reviewApi\";\r\nimport useCustomMove from \"../hooks/useCustomMove\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"\r\nimport { getBakeries } from \"../../api/bakeryApi\"\r\n\r\n\r\nconst initState = {\r\n    title: \"\",\r\n    content: \"\",\r\n    bakeryId: \"\",\r\n}\r\n\r\nexport default function AddComponent() {\r\n    const [review, setReview] = useState(initState);\r\n    const [bakeries, setBakeries] = useState([]);\r\n    const uploadRef = useRef(null);\r\n    const { moveToPath } = useCustomMove()\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchBakeries = async () => {\r\n            const list = await getBakeries();\r\n            setBakeries(list);\r\n        };\r\n        fetchBakeries();\r\n    }, []);\r\n\r\n\r\n    const handleChangeReview = (e) => {\r\n        const { name, value } = e.target;\r\n        setReview((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n\r\n    const handleClickAdd = async () => {\r\n        if (!review.title.trim() || !review.content.trim()) {\r\n            alert(\"제목과 내용을 입력해주세요\");\r\n            return;\r\n        }\r\n\r\n        const html = review.content\r\n        const plainText = html.replace(/<\\/?[^>]+>/g, '').trim()\r\n\r\n        const formdata = new FormData();\r\n        formdata.append(\"title\", review.title);\r\n        formdata.append(\"content\", plainText);\r\n        formdata.append(\"bakeryId\", review.bakeryId);\r\n\r\n        const files = uploadRef.current?.files\r\n        if (files && files.length > 0) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                formdata.append(\"files\", files[i]);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await register(formdata);\r\n            console.log(\"등록성공:\", res);\r\n            alert(\"등록되었습니다\");\r\n            setReview(initState);\r\n\r\n            if (uploadRef.current)\r\n                uploadRef.current.value = \"\"\r\n            moveToPath('/review', true)\r\n        } catch (err) {\r\n            console.error(\"등록실패:\", err);\r\n            alert(\"등록 중 오류가 발생했습니다\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mx-auto max-w-2xl px-4 py-8\">\r\n      <h1 className=\"mb-6 text-2xl font-semibold\">글 등록</h1>\r\n      <div className=\"space-y-5 rounded-2xl bg-white p-6 shadow\">\r\n        \r\n        {/* 제목 */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"title\" className=\"text-sm font-medium text-gray-700\">\r\n            제목\r\n          </label>\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"제목\"\r\n            value={review.title}\r\n            onChange={handleChangeReview}\r\n            className=\"w-full rounded-xl border border-gray-200 bg-gray-50 px-4 py-2 outline-none transition\r\n            focus:border-indigo-400 focus:bg-white focus:ring-2 focus:ring-indigo-200\"\r\n          />\r\n        </div>\r\n\r\n        {/* 내용 */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"content\" className=\"text-sm font-medium text-gray-700\">\r\n            내용\r\n          </label>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            style={{ minHeight: \"200px\" }}\r\n            placeholder=\"내용\"\r\n            data={review.content}\r\n            onChange={(_, editor) => {\r\n              handleChangeReview({\r\n                target: { name: \"content\", value: editor.getData() },\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* 가게 선택 */}\r\n                <div className=\"space-y-2\">\r\n                    <label className=\"text-sm font-medium text-gray-700\">가게 선택</label>\r\n                    <select\r\n                        name=\"bakeryId\"\r\n                        value={review.bakeryId}\r\n                        onChange={handleChangeReview}\r\n                        className=\"w-full rounded-xl border border-gray-200 bg-gray-50 px-4 py-2 outline-none transition focus:border-indigo-400 focus:bg-white focus:ring-2 focus:ring-indigo-200\"\r\n                    >\r\n                        <option value=\"\">가게를 선택하세요</option>\r\n                        {bakeries.map((b) => (\r\n                            <option key={b.id} value={b.id}>{b.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n        {/* 파일 첨부 */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"files\" className=\"text-sm font-medium text-gray-700\">\r\n            파일 첨부\r\n          </label>\r\n          <input\r\n            id=\"files\"\r\n            type=\"file\"\r\n            multiple\r\n            ref={uploadRef}\r\n            className=\"block w-full text-sm text-gray-700\r\n            file:mr-4 file:rounded-xl file:border-0 file:bg-indigo-50 file:px-4 file:py-2 file:text-indigo-700\r\n            hover:file:bg-indigo-100\"\r\n          />\r\n        </div>\r\n\r\n        {/* 버튼 */}\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleClickAdd}\r\n            className=\"inline-flex items-center rounded-xl bg-indigo-600 px-5 py-2.5 text-sm font-medium text-white shadow\r\n            hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-400 active:translate-y-px\"\r\n          >\r\n            글 등록\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n","import AddComponent from \"../../component/review/AddComponent\";\r\n\r\nconst AddPage = () => {\r\n    return (\r\n        <div className=\"bg-[#F4C455]\">\r\n            <AddComponent/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPage;","import jwtAxios from \"../util/JWTUtil\";\r\nimport {API_SERVER_HOST, moveAxios} from \"./config\";\r\n\r\nconst prefix = `${API_SERVER_HOST}/api/bakeries`;\r\n\r\nexport const getBakeries = async () =>{\r\n    try{\r\n        const response = await moveAxios.get(`${prefix}/`);\r\n        return response.data;\r\n    } catch (error){\r\n        console.error(\"Bakery API 호출 실패:\",error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const getBakeryProducts = async (bakeryId) => {\r\n    const res = await moveAxios.get(`${prefix}/product/${bakeryId}`)\r\n    return res.data\r\n}"],"names":["prefix","concat","API_SERVER_HOST","getList","async","page","size","pageParam","moveAxios","get","params","data","getOne","id","register","jwtAxios","post","formdata","headers","remove","delete","getFileUrl","filename","encodeURIComponent","putOne","formData","put","initState","title","content","bakeryId","AddComponent","review","setReview","useState","bakeries","setBakeries","uploadRef","useRef","moveToPath","useCustomMove","useEffect","list","getBakeries","fetchBakeries","handleChangeReview","e","name","value","target","prev","_objectSpread","_jsxs","className","children","_jsx","htmlFor","type","placeholder","onChange","CKEditor","editor","ClassicEditor","style","minHeight","_","getData","map","b","multiple","ref","onClick","_uploadRef$current","trim","alert","plainText","replace","FormData","append","files","current","length","i","res","console","log","err","error","AddPage","getBakeryProducts"],"sourceRoot":""}